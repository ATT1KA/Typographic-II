:root {
  color-scheme: dark;
  /* Typography */
  --font-sans: "IBM Plex Sans", system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji", sans-serif;
  --font-mono: "IBM Plex Mono", ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* Brighter neutral body (monochrome) */
  --bg: #1b1b1b;
  /* Elevated surfaces (monochrome) */
  --bg-elev: #232323;
  /* Dark neutral for controls */
  --bg-elev-2: #141414;
  /* Neutral border */
  --border: #2e2e2e;
  --muted: #bdbdbd;
  --text: #f0f0f0;
  --text-inv: #0b0d12;
  --accent: #6c5ce7;
  --accent-2: #0984e3;
  --accent-3: #d63031;
  --accent-4: #e17055;
  --accent-5: #00b894;
  --accent-6: #fdcb6e;
  --ring: rgba(108, 92, 231, 0.55);
  /* Explicit control colors */
  --control-bg: var(--bg-elev-2);
  --control-border: color-mix(in oklab, var(--border), white 10%);
  --radius: 3px;
  --radius-sm: 3px;
  --radius-lg: 6px;
  --shadow-1: 0 6px 20px rgba(0,0,0,0.25);
  --shadow-2: 0 20px 60px rgba(0,0,0,0.35);
  --space-1: 4px;
  --space-2: 8px;
  --space-3: 12px;
  --space-4: 16px;
  --space-5: 20px;
  --space-6: 24px;
}

.app-shell {
  height: 100%;
  display: grid;
  grid-template-rows: 84px 1fr; /* header 50% taller */
  /* Keep accents subtle; all other tones monochrome */
  background: radial-gradient(1200px 600px at 80% -10%, rgba(108,92,231,0.06), transparent 50%),
              radial-gradient(800px 400px at -10% 110%, rgba(0,184,148,0.05), transparent 50%),
              var(--bg);
  color: var(--text);
}
.app-header {
  display: flex; align-items: center; justify-content: space-between;
  /* reduced by ~15% for slightly less edge spacing */
  padding: 0 clamp(27px, 5.1vw, 61px);
  /* Flat, textured acrylic steel-grey with subtle monochromatic noise */
  /* Darker base and finer, higher-contrast noise texture */
  background: 
    url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='40' height='40'%3E%3Cfilter id='noise'%3E%3CfeTurbulence baseFrequency='1.8' numOctaves='2' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.18'/%3E%3C/svg%3E"),
    rgba(12,12,12,0.96);
  border-bottom: 1px solid var(--control-border);
  backdrop-filter: blur(12px) saturate(140%);
  -webkit-backdrop-filter: blur(12px) saturate(140%);
  box-shadow: 0 6px 10px rgba(0,0,0,0.22);
  border-radius: 0 !important;
}
.app-nav { display: flex; gap: 16px; }
.app-nav a { color: var(--muted); text-decoration: none; font-weight: 500; padding: 8px 10px; border-radius: var(--radius); }
.app-nav a:hover, .app-nav a.active {
  color: var(--text);
  /* Darker highlight instead of lighter */
  background: linear-gradient(180deg, rgba(0,0,0,0.18), rgba(0,0,0,0.24));
  /* subtle 1px inner bevel: light top edge, darker bottom edge */
  box-shadow: inset 0 1px 0 rgba(255,255,255,0.03), inset 0 -1px 0 rgba(0,0,0,0.32);
  transition: background 160ms ease, box-shadow 160ms ease, color 160ms ease;
}
.brand { display: flex; align-items: center; gap: 12px; }
.brand-title { font-family: var(--font-mono); font-weight: 600; font-size: 18px; letter-spacing: 1.6px; text-transform: uppercase; color: var(--text); text-shadow: 0 0 2px rgba(0,0,0,0.9); }
/* Increase headline size ~20% while keeping vertical centering */
.brand-title { font-size: 21.6px; line-height: 1; display: inline-flex; align-items: center; }
.header-actions { display: flex; align-items: center; gap: var(--space-3); }
.icon-btn { display: inline-flex; align-items: center; gap: 8px; padding: 6px 10px; border-radius: var(--radius-sm); background: var(--control-bg); border: 1px solid var(--control-border); color: var(--text); }
.icon-btn:hover { border-color: color-mix(in oklab, var(--control-border), white 20%); }
.icon-btn:focus, .icon-btn:focus-visible {
  /* Override broad global focus rule (which uses var(--ring)) so the header Settings
     button doesn't show the purple outline. Use a neutral, subtle focus instead. */
  outline: 2px solid rgba(255,255,255,0.06) !important;
  outline-offset: 2px !important;
  box-shadow: 0 4px 10px rgba(0,0,0,0.12) inset !important;
}
.flow-surface { margin: 0; border-radius: 0; background: var(--bg); border: none; box-shadow: none; position: relative; overflow: hidden; }
.pill { font-size: 12px; padding: 4px 8px; border-radius: 999px; border: 1px solid var(--control-border); background: var(--control-bg); color: var(--muted); }
.dot { width: 10px; height: 10px; border-radius: 50%; display: inline-block; }
.dot.ok { background: #22c55e; box-shadow: 0 0 0 2px rgba(34,197,94,0.25); }
.dot.bad { background: #ef4444; box-shadow: 0 0 0 2px rgba(239,68,68,0.25); }

/* Overlay rail for Workflow sidebar */
:root { --rail-w: 48px; --panel-w: 320px; }
/* Rail is narrow by default; expands only when open */
.rail { position: absolute; inset: 0 auto 0 0; width: var(--rail-w); pointer-events: none; z-index: 14; }
.rail.open { width: var(--panel-w); pointer-events: auto; }
.rail.open .rail-inner { pointer-events: auto; }
.rail-inner { height: 100%; display: grid; grid-template-columns: var(--rail-w) 1fr; pointer-events: none; }

/* When the rail is hovered (narrow state), allow pointer events inside the handle so clicks reach controls */
.rail:hover, .rail:hover .rail-inner { pointer-events: auto; }
.rail-backdrop { position: fixed; inset: 0; background: rgba(0,0,0,0.45); opacity: 0; transition: opacity 180ms ease; pointer-events: none; z-index: 12; }
.rail.open .rail-backdrop { opacity: 1; pointer-events: auto; }
.rail-handle { width: var(--rail-w); height: 100%; pointer-events: auto; display: grid; grid-auto-rows: max-content 1fr; align-items: start; justify-items: center; background: linear-gradient(180deg, rgb(18 17 18 / 36%), rgba(12,14,22,0.36)); border-right: 1px solid var(--control-border); z-index: 15; backdrop-filter: blur(12px) saturate(140%); -webkit-backdrop-filter: blur(12px) saturate(140%); }
.rail-toggle { margin: 10px 0 0 0; width: 32px; height: 32px; border-radius: var(--radius); border: 1px solid var(--control-border); background: var(--control-bg); color: var(--muted); }
.rail-toggle:hover { color: var(--text); border-color: color-mix(in oklab, var(--control-border), white 20%); }

/* Strong override: replace purple focus/active outline on the rail toggle */
.rail-toggle:focus, .rail-toggle:focus-visible, .rail-toggle:active, .rail-handle .rail-toggle:active {
  outline: none !important;
  outline-offset: 0 !important;
  box-shadow: none !important;
}

/* Remove any fallback overlay for the rail-toggle */
.rail-toggle::after { display: none !important; }
.rail-panel { height: 100%; pointer-events: auto; background: linear-gradient(180deg, rgb(18 17 18 / 20%), rgba(12, 14, 22, 0.2)); border-right: 1px solid var(--control-border); box-shadow: 0 4px 4px rgba(0,0,0,0.18); padding: 12px; overflow: auto; transform: translateX(-100%); transition: transform 200ms ease; position: relative; z-index: 13; backdrop-filter: blur(12px) saturate(140%); -webkit-backdrop-filter: blur(12px) saturate(140%); }
.rail.open .rail-panel { transform: translateX(0); }
/* Ensure no peek when closed */
.rail:not(.open) .rail-panel { visibility: hidden; }
.rail-section summary { list-style: none; cursor: pointer; padding: 8px 10px; border-radius: var(--radius); border: 1px solid var(--control-border); background: rgba(20,20,20,0.65); color: var(--text); }
.rail-panel details > summary {
  font-weight: 700; /* bold category title */
  color: var(--text);
  /* Softer outer glow: increase blur slightly and lower alpha for a subtler effect */
  text-shadow: 0 0 3px rgba(0,0,0,0.6), 0 0 6px rgba(0,0,0,0.35);
  /* Slightly increase letter spacing for clarity */
  letter-spacing: 0.6px;
  position: relative; /* needed for absolute positioned arrow */
  cursor: pointer;
  padding: 8px 10px;
  border-radius: var(--radius);
  border: 1px solid var(--control-border);
  background: rgba(20,20,20,0.65);
  list-style: none;
}

/* Ensure the details and summary receive pointer events (allow collapse/expand) */
.rail-panel details {
  position: relative; /* create stacking context for summary */
}
.rail-panel details,
.rail-panel details > summary,
.rail-panel details > summary * {
  pointer-events: auto;
}
.rail-panel details > summary { z-index: 2; }
/* Custom arrow indicator */
.rail-panel details > summary::after {
  content: '';
  position: absolute;
  right: 10px;
  top: 50%;
  transform: translateY(-50%);
  width: 0;
  height: 0;
  border-left: 4px solid transparent;
  border-right: 4px solid transparent;
  border-top: 4px solid var(--text);
  transition: transform 0.2s ease;
  opacity: 0.7;
  pointer-events: none;
}
.rail-panel details[open] > summary::after {
  transform: translateY(-50%) rotate(180deg);
}
.rail-section summary::-webkit-details-marker { display: none; }
.rail-list { display: grid; gap: 8px; margin-top: 8px; }
.rail-item { display: flex; align-items: center; justify-content: space-between; padding: 8px 10px; border-radius: var(--radius); border: 1px solid var(--control-border); background: rgba(18,18,18,0.78); color: var(--text); backdrop-filter: blur(2px) saturate(120%); }
.rail-item:hover { border-color: color-mix(in oklab, var(--control-border), white 20%); }
/* Add a bit of space before each new category bar */
.rail-panel details + details summary { margin-top: var(--space-2); }

/* SCI-specific tweak: halve glow opacity and add thin black stroke for readability */
.rail-panel details[data-vertical="SCI"] > summary {
  /* SCI-specific: use black text with a white outer glow for readability on amber background */
  color: #000000;
  text-shadow: 0 0 3px rgba(255,255,255,0.45), 0 0 6px rgba(255,255,255,0.275);
  position: relative;
  pointer-events: auto;
}

/* Prevent decorative pseudo-elements from intercepting clicks on summary */
.rail-panel details[data-vertical="SCI"] > summary::before,
.rail-panel details[data-vertical="SCI"] > summary::after {
  pointer-events: none;
}

/* Acrylic toast styling to match modal */
.toast-acrylic {
  background: linear-gradient(180deg, rgba(16,20,32,0.55), rgba(12,14,22,0.50)) !important;
  backdrop-filter: blur(12px) saturate(140%);
  -webkit-backdrop-filter: blur(12px) saturate(140%);
  color: var(--text) !important;
  border: 1px solid var(--control-border) !important;
  box-shadow: 0 4px 4px rgba(0,0,0,0.18) !important;
  border-radius: var(--radius) !important;
}

/* Make the toast smaller and thinner */
.toast-compact {
  padding: 6px 10px !important;
  font-size: 13px !important;
  min-height: unset !important;
}

/* Position container slightly above React Flow minimap (bottom-right) */
.toast-container-flow {
  bottom: 128px !important; /* default minimap approx height (120) + 8px gap */
  right: 16px !important;
  width: 200px !important; /* match default minimap width */
}
.toast-container-flow .Toastify__toast-container { width: 100% !important; }
.toast-container-flow .Toastify__toast { width: 100% !important; margin: 0 !important; }
.toast-container-flow .Toastify__toast-body { margin: 0 !important; padding: 0 !important; }

/* Acrylic, textured MiniMap background */
.react-flow__minimap {
  background: 
    linear-gradient(180deg, rgba(34,36,40,0.42), rgba(28,30,34,0.40)),
    radial-gradient(120% 100% at 10% 0%, rgba(255,255,255,0.04), rgba(255,255,255,0) 55%),
    radial-gradient(120% 120% at 90% 100%, rgba(0,0,0,0.06), rgba(0,0,0,0) 60%),
    rgba(36,36,36,0.40) !important;
  backdrop-filter: blur(12px) saturate(140%);
  -webkit-backdrop-filter: blur(12px) saturate(140%);
  border: 1px solid var(--control-border);
  border-radius: var(--radius);
  box-shadow: 0 4px 4px rgba(0,0,0,0.18);
}

/* Workflow top-right controls (Workflow ID, Save, Load) */
.workflow-controls {
  display: flex; align-items: center; gap: 8px;
}
.workflow-controls input,
.workflow-controls button {
  border-radius: 4px !important;
}
.workflow-controls input {
  padding: 4px 6px;
  height: 20px;
  width: 120px;
  background: var(--control-bg);
  border: 1px solid var(--control-border);
  color: var(--text);
}
.workflow-controls button {
  padding: 5px 8px;
  height: 20px;
  background: var(--control-bg);
  border: 1px solid var(--control-border);
  color: var(--text);
  /* Subtle 1px inner bevel: light top, dark bottom */
  box-shadow: inset 0 1px 0 rgba(255,255,255,0.04), inset 0 -1px 0 rgba(0,0,0,0.28);
  /* Use the monospace UI font for consistent typespace and compact metrics */
  font-family: var(--font-mono);
  font-size: 13px; /* small but readable */
  line-height: 1; /* keep text vertically centered inside the smaller height */
  white-space: nowrap; /* avoid wrapping which would increase height */
  overflow: hidden; /* prevent text overflowing the rounded corners */
  text-overflow: ellipsis; /* visually contain long labels */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  box-sizing: border-box; /* ensure padding included in height */
}

/* Controls positioned left of minimap */
.reactflow-controls-left-of-minimap {
  --gap: 1px; /* desired gap between controls and minimap (reduced by half again) */
  position: fixed; /* JS will compute exact left/top to sit left of minimap */
  right: auto;
  bottom: auto;
  transform: none;
  z-index: 9999;
  display: flex;
  flex-direction: column;
  gap: 6px;
  align-items: center;
  justify-content: center;
}

/* Ensure the inner Controls container doesn't apply its own absolute offsets */
.reactflow-controls-left-of-minimap .react-flow__controls {
  position: static !important;
  display: flex;
  flex-direction: column;
  gap: 8px;
}

/* Style React Flow Controls buttons (support both class variants and direct button) */
.reactflow-controls-left-of-minimap .react-flow__controls__button,
.reactflow-controls-left-of-minimap .react-flow__controls-button,
.reactflow-controls-left-of-minimap .react-flow__controls > button {
  /* Mid grey for usable contrast with black icons */
  background: #6b6b6b !important; /* readable mid grey */
  background-image: none !important;
  color: #000 !important;
  width: 28px;
  height: 28px;
  border-radius: 4px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 6px 14px rgba(0,0,0,0.12) !important;
  border: 1px solid rgba(255,255,255,0.03) !important;
  backdrop-filter: blur(6px) saturate(120%);
  -webkit-backdrop-filter: blur(6px) saturate(120%);
  opacity: 0.98;
  outline: none !important;
  filter: none !important;
}

/* Remove/reactive default focus ring and use subtle neutral focus */
.reactflow-controls-left-of-minimap .react-flow__controls__button:hover,
.reactflow-controls-left-of-minimap .react-flow__controls__button:active,
.reactflow-controls-left-of-minimap .react-flow__controls__button:focus,
.reactflow-controls-left-of-minimap .react-flow__controls__button:focus-visible,
.reactflow-controls-left-of-minimap .react-flow__controls__button.react-flow__controls__button--active,
.reactflow-controls-left-of-minimap .react-flow__controls-button:hover,
.reactflow-controls-left-of-minimap .react-flow__controls-button:active,
.reactflow-controls-left-of-minimap .react-flow__controls-button:focus,
.reactflow-controls-left-of-minimap .react-flow__controls-button:focus-visible,
.reactflow-controls-left-of-minimap .react-flow__controls > button:hover,
.reactflow-controls-left-of-minimap .react-flow__controls > button:active,
.reactflow-controls-left-of-minimap .react-flow__controls > button:focus,
.reactflow-controls-left-of-minimap .react-flow__controls > button:focus-visible {
  outline: none !important;
  box-shadow: none !important;
  border-color: rgba(255,255,255,0.06) !important;
  background: #7a7a7a !important; /* slightly lighter on hover */
}
.reactflow-controls-left-of-minimap .react-flow__controls__button:focus-visible,
.reactflow-controls-left-of-minimap .react-flow__controls__button.react-flow__controls__button--active {
  border-color: rgba(0,0,0,0.12) !important;
  box-shadow: 0 4px 10px rgba(0,0,0,0.12) !important;
}

.reactflow-controls-left-of-minimap .react-flow__controls__button svg,
.reactflow-controls-left-of-minimap .react-flow__controls__button svg *,
.reactflow-controls-left-of-minimap .react-flow__controls__button path,
.reactflow-controls-left-of-minimap .react-flow__controls__button line,
.reactflow-controls-left-of-minimap .react-flow__controls__button rect,
.reactflow-controls-left-of-minimap .react-flow__controls__button circle,
.reactflow-controls-left-of-minimap .react-flow__controls-button svg,
.reactflow-controls-left-of-minimap .react-flow__controls-button svg *,
.reactflow-controls-left-of-minimap .react-flow__controls-button path,
.reactflow-controls-left-of-minimap .react-flow__controls-button line,
.reactflow-controls-left-of-minimap .react-flow__controls-button rect,
.reactflow-controls-left-of-minimap .react-flow__controls-button circle,
.reactflow-controls-left-of-minimap .react-flow__controls > button svg,
.reactflow-controls-left-of-minimap .react-flow__controls > button svg *,
.reactflow-controls-left-of-minimap .react-flow__controls > button path,
.reactflow-controls-left-of-minimap .react-flow__controls > button line,
.reactflow-controls-left-of-minimap .react-flow__controls > button rect,
.reactflow-controls-left-of-minimap .react-flow__controls > button circle {
  fill: #000 !important;
  stroke: #000 !important;
  color: #000 !important;
  fill-opacity: 1 !important;
  stroke-opacity: 1 !important;
  opacity: 1 !important;
}

@media (max-width: 900px) {
  .reactflow-controls-left-of-minimap { right: calc(var(--minimap-w) + var(--gap) + 12px); bottom: 12px; }
  .react-flow__minimap { transform: scale(0.98); }
}

/* Remove any legacy floating catalog UI */
.library-launcher, .node-flyout { display: none !important; }

/* In-panel tabs inside existing NodeLibrary */
.lib-tab {
  font: 600 11px/1.2 var(--font-mono, ui-monospace, SFMono-Regular, Menlo, Consolas, 'Liberation Mono', monospace);
  color: #e7e7e7;
  background: #121212;
  border: 1px solid #2a2a2a;
  border-radius: 3px;
  padding: 6px 10px;
  cursor: pointer;
  box-shadow: inset 0 1px 0 rgba(255,255,255,0.04), inset 0 -1px 0 rgba(0,0,0,0.28);
  white-space: nowrap;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  transition: background 140ms ease, border-color 140ms ease, box-shadow 140ms ease;
}
.lib-tab.active { background: #191919; border-color: #333; }

/* Remove purple focus ring and use a subtle darker background on focus */
.lib-tab:focus,
.lib-tab:focus-visible {
  outline: none !important;
  box-shadow: none !important;
  background: #151515; /* slightly darker than normal */
  border-color: #323232;
}

/* Keep active state visually consistent with keyboard focus */
.lib-tab.active:focus,
.lib-tab.active:focus-visible {
  background: #161616;
  border-color: #2f2f2f;
}

/* Tabs grid: 2 equal columns; 3rd/4th wrap beneath 1st/2nd */
.lib-tabs {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 8px;
  /* single internal gap used to center the fading divider reliably */
  --lib-gap-total: 21px; /* previous padding-bottom (13) + previous margin-bottom (8) */
  --lib-line-thickness: 2px;
  padding-bottom: var(--lib-gap-total);
  margin-bottom: 0; /* remove external margin so pseudo-element can center inside padding */
  position: relative; /* needed for pseudo-element positioning */
}
.lib-tabs .lib-tab { width: 100%; min-width: 0; overflow: hidden; text-overflow: ellipsis; }

/* Replace the hard border with a centered 2px line that fades at the edges */
.lib-tabs::after {
  content: '';
  position: absolute;
  left: 0;
  right: 0;
  /* center the line inside the total internal gap */
  bottom: calc((var(--lib-gap-total) - var(--lib-line-thickness)) / 2);
  height: var(--lib-line-thickness);
  pointer-events: none;
  /* Create a horizontal gradient: transparent -> semi-white line -> transparent */
  background: linear-gradient(
    to right,
    transparent 7%,
    rgba(255,255,255,0.12) 15%,
    rgba(255,255,255,0.12) 85%,
    transparent 93%
  );
  transform-origin: center;
}

/* No viewport breakpoints needed; buttons always stack 2x2 inside the rail */

/* Slightly larger handle hit-area (ported for visibility) */
.react-flow__handle { width: 10px; height: 10px; border-radius: 50%; }
